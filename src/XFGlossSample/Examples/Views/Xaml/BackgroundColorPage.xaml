<?xml version="1.0" encoding="UTF-8"?>
<ContentPage	xmlns="http://xamarin.com/schemas/2014/forms"
				xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
				xmlns:xfg="clr-namespace:XFGloss;assembly=XFGloss"
				x:Class="XFGlossSample.Examples.Views.Xaml.BackgroundColorPage"
				Title="Xaml Background Colors"
				>

	<StackLayout>
		<!-- This is a bit of a hack. Android's renderer for TableView always adds an empty header for a 
			 TableSection declaration, while iOS doesn't. To compensate, I'm using a Label to display info text
			 on iOS, and the TableSection on Android since there is no easy way to get rid of it. This is a 
			 long-standing bug in the XF TableView on Android.
			(https://forums.xamarin.com/discussion/18037/tablesection-w-out-header)
		-->
		<Label Text="Cell BackgroundColor values set in Xaml:" Margin="10">
			<Label.IsVisible>
				<OnPlatform x:TypeArguments="x:Boolean" iOS="true" Android="false" />
			</Label.IsVisible>
		</Label>
		<TableView Intent="Data">
			<TableView.HeightRequest>
				<!-- Having to make table view big enough on Android to see all four rows plus the unwanted header -->
				<OnPlatform x:TypeArguments="x:Double" iOS="132" Android="190" />
			</TableView.HeightRequest>
			<TableView.Root>
				<TableSection>
						<!-- 
							 Yet another hack related to the TableSection. We want the title to be empty on iOS (so there
							 won't be a header created) but set on Android (since a header is always created - might as 
							 well make use of it!
						-->
						<TableSection.Title>
							<OnPlatform x:TypeArguments="x:String" iOS="" Android="Cell BackgroundColor values set in Xaml:" />
						</TableSection.Title>
					<TextCell Text="Red" TextColor="White" xfg:CellGloss.BackgroundColor="Red" />
					<TextCell Text="Green" TextColor="White" xfg:CellGloss.BackgroundColor="Green" />
					<TextCell Text="Blue" TextColor="White" xfg:CellGloss.BackgroundColor="Blue" />
				</TableSection>
			</TableView.Root>
		</TableView>
	</StackLayout>
	
</ContentPage>
